"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4734],{6113:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"clientStages/clientStage","title":"<span class=\\"h1style\\">Stage Component</span>","description":"This document explains the Stage component, its logic, functionality, and its role within the application. This component manages the rendering of different stages in the game based on the current state. This page is verified by: Vedant Kejariwal","source":"@site/docs/clientStages/clientStage.md","sourceDirName":"clientStages","slug":"/clientStages/clientStage","permalink":"/MVAh2hDocs/docs/clientStages/clientStage","draft":false,"unlisted":false,"editUrl":"https://github.com/VedantKejariwal/MVAh2hDocs/edit/main/docs/clientStages/clientStage.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Client Stage Component","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Client Stages Docs","permalink":"/MVAh2hDocs/docs/category/client-stages-docs"},"next":{"title":"ConsumerChoice","permalink":"/MVAh2hDocs/docs/clientStages/consumerChoice"}}');var t=s(4848),l=s(8453);const r={sidebar_label:"Client Stage Component",sidebar_position:1},a="Stage Component",c={},o=[{value:'<span class="h2style">Overview</span>',id:"overview",level:3},{value:'<span class="h2style">Component Features</span>',id:"component-features",level:3},{value:'<span class="h2style">Logic Explanation</span>',id:"logic-explanation",level:3},{value:'<span class="custom-heading">1. Player Submission Check</span>',id:"1-player-submission-check",level:4},{value:'<span class="custom-heading">2. Stage Rendering Logic</span>',id:"2-stage-rendering-logic",level:4},{value:'<span class="h2style">Key Imported Components</span>',id:"key-imported-components",level:3},{value:'<span class="custom-heading">1. PayoffMatrix</span>',id:"1-payoffmatrix",level:4},{value:'<span class="custom-heading">2. Timer</span>',id:"2-timer",level:4},{value:'<span class="custom-heading">3. Stage-Specific Components</span>',id:"3-stage-specific-components",level:4},{value:'<span class="h2style">Logical Flow</span>',id:"logical-flow",level:3},{value:'<span class="h2style">Conclusion</span>',id:"conclusion",level:3}];function d(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"stage-component",children:(0,t.jsx)("span",{class:"h1style",children:"Stage Component"})})}),"\n",(0,t.jsxs)(n.p,{children:["This document explains the ",(0,t.jsx)(n.code,{children:"Stage"})," component, its logic, functionality, and its role within the application. This component manages the rendering of different stages in the game based on the current state. This page is verified by: ",(0,t.jsx)(n.em,{children:"Vedant Kejariwal"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"overview",children:(0,t.jsx)("span",{class:"h2style",children:"Overview"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Stage"})," component is a dynamic React component responsible for rendering specific stages of the game. The application uses Empirica's ",(0,t.jsx)(n.code,{children:"usePlayer"}),", ",(0,t.jsx)(n.code,{children:"usePlayers"}),", ",(0,t.jsx)(n.code,{children:"useRound"}),", and ",(0,t.jsx)(n.code,{children:"useStage"})," hooks to manage and interact with game data."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"component-features",children:(0,t.jsx)("span",{class:"h2style",children:"Component Features"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Dynamic Stage Rendering:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Based on the current stage name retrieved using ",(0,t.jsx)(n.code,{children:'stage.get("name")'}),", the component dynamically renders different stages such as ",(0,t.jsx)(n.code,{children:"SelectRole"}),", ",(0,t.jsx)(n.code,{children:"ConsumerChoice"}),", ",(0,t.jsx)(n.code,{children:"ProducerChoice"}),", ",(0,t.jsx)(n.code,{children:"Feedback"}),", and ",(0,t.jsx)(n.code,{children:"Results"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Waiting State:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the player has already submitted their data for the stage (",(0,t.jsx)(n.code,{children:'player.stage.get("submit")'}),"), the component shows a waiting screen until all players have submitted."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Timer Integration:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Displays a countdown timer for stages where a timer is applicable."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Conditional Content:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Differentiates content shown to ",(0,t.jsx)(n.code,{children:"consumer"})," and ",(0,t.jsx)(n.code,{children:"producer"})," roles using ",(0,t.jsx)(n.code,{children:'player.get("role")'}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"logic-explanation",children:(0,t.jsx)("span",{class:"h2style",children:"Logic Explanation"})}),"\n",(0,t.jsx)(n.h4,{id:"1-player-submission-check",children:(0,t.jsx)("span",{class:"custom-heading",children:"1. Player Submission Check"})}),"\n",(0,t.jsx)(n.p,{children:"The component begins by checking whether the current player has submitted their actions for the stage. If they have:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A waiting screen is displayed, instructing the player to wait for others."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"PayoffMatrix"})," component is rendered based on the player's role."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"2-stage-rendering-logic",children:(0,t.jsx)("span",{class:"custom-heading",children:"2. Stage Rendering Logic"})}),"\n",(0,t.jsxs)(n.p,{children:["If the player has not yet submitted their data, the component renders a stage based on the value of ",(0,t.jsx)(n.code,{children:'stage.get("name")'}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SelectRole"}),": Renders the role selection screen."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tutorial"}),": Displays the tutorial."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ConsumerChoice"}),": Allows consumers to make decisions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ProducerChoice"}),": Allows producers to create their products."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Feedback"}),": Displays the feedback phase."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Results"}),": Shows the round results."]}),"\n",(0,t.jsx)(n.li,{children:"A default loading screen is rendered for unrecognized stages."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"key-imported-components",children:(0,t.jsx)("span",{class:"h2style",children:"Key Imported Components"})}),"\n",(0,t.jsx)(n.h4,{id:"1-payoffmatrix",children:(0,t.jsx)("span",{class:"custom-heading",children:"1. PayoffMatrix"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Displays the payoff matrix for consumers and producers based on their roles and actions."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"2-timer",children:(0,t.jsx)("span",{class:"custom-heading",children:"2. Timer"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Displays a countdown timer for time-limited stages."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"3-stage-specific-components",children:(0,t.jsx)("span",{class:"custom-heading",children:"3. Stage-Specific Components"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SelectRole"}),": Enables role selection."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tutorial"}),": Guides players through the game."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ConsumerChoice"}),": Allows consumers to make decisions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ProducerChoice"}),": Allows producers to create products."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Feedback"}),": Collects feedback."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Results"}),": Displays the results of the round."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"logical-flow",children:(0,t.jsx)("span",{class:"h2style",children:"Logical Flow"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Fetch Player and Stage Information:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The component retrieves the current player, players list, round, and stage data."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Handle Waiting State:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If the player has submitted their data, a waiting state is displayed with role-specific information."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Render Appropriate Stage:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If the player has not submitted their data then based on the stage name, the corresponding stage component is rendered."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Dynamic Role-Based Rendering:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Adjusts displayed content based on the player's role (",(0,t.jsx)(n.code,{children:"consumer"})," or ",(0,t.jsx)(n.code,{children:"producer"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If the player is a consumer then a PayoffMatrix component tailored for the consumer is rendered. Additional consumer-specific UI or instructions are displayed."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If the player is a producer then a different PayoffMatrix component for the producer is shown. Producer-specific instructions or options are displayed."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"conclusion",children:(0,t.jsx)("span",{class:"h2style",children:"Conclusion"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Stage"})," component is essential for dynamically rendering the game's stages. It uses Empirica hooks to interact with the game state, ensures a seamless experience for players, and adapts to role-specific content dynamically. This modular approach makes it easy to extend and maintain."]}),"\n",(0,t.jsxs)(n.admonition,{title:"Supplementary",type:"tip",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:'player.stage.set("submit", true)'})," is a mechanism to:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Signal task completion for the player in the current stage."}),"\n",(0,t.jsx)(n.li,{children:"Enable synchronization of game flow between players."}),"\n",(0,t.jsx)(n.li,{children:"Ensure state persistence across the front end and back end."}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(6540);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);